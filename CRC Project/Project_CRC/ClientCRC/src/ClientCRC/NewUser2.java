/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewUser2.java
 *
 * Created on 9-dic-2011, 10.23.08
 */

package ClientCRC;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import java.net.*;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JMenuItem;
import org.apache.soap.rpc.*;
import org.apache.soap.Constants;
import org.apache.soap.SOAPException;

/**
 *
 * @author Alessandro Marcucci
 */
public class NewUser2 extends javax.swing.JFrame implements ActionListener{
    private Font myFont = new Font("Tahoma", Font.PLAIN,11);
    /** Creates new form NewUser2 */
    public NewUser2(String codice,String nome,String cognome,String data,String luogo, String indirizzo,String mail) {
        initComponents();
        this.getContentPane().setBackground(Color.DARK_GRAY);
        this.setIconImage(new ImageIcon("C:\\SOAP\\images\\icon.gif").getImage());
        jCode.setText(codice);
        jNome.setText(nome);
        jCognome.setText(cognome);
        jData.setText(data);
        jLuogo.setText(luogo);
        jIndirizzo.setText(indirizzo);
        jMail.setText(mail);
        
        JMenuItem esciMenu = new JMenuItem("Esci da ReCronix");
        
        JMenuItem indietroMenu = new JMenuItem("Indietro");
        JMenuItem guidaMenu = new JMenuItem("Guida");
        JMenuItem creditMenu = new JMenuItem("Credits");
        
        creditMenu.setFont(myFont);
        creditMenu.setBackground(Color.DARK_GRAY);
        creditMenu.setForeground(Color.yellow);
        
        
        guidaMenu.setFont(myFont);
        guidaMenu.setBackground(Color.DARK_GRAY);
        guidaMenu.setForeground(Color.yellow);
        
        
        
        esciMenu.setFont(myFont);
        esciMenu.setBackground(Color.DARK_GRAY);
        esciMenu.setForeground(Color.yellow);
        
        indietroMenu.setFont(myFont);
        indietroMenu.setBackground(Color.DARK_GRAY);
        indietroMenu.setForeground(Color.yellow);
        
        
        jMenu1.add(indietroMenu);
        
        jMenu1.addSeparator();
        jMenu1.add(esciMenu);
        jMenu1.setBackground(Color.DARK_GRAY);
        
        jMenu2.add(guidaMenu);
        jMenu2.addSeparator();
        jMenu2.add(creditMenu);
        //JMenuItem openAction =  new JMenuItem("Open SPSS");
        
        //JMenuItem cutAction =   new JMenuItem("Cut");
        //JMenuItem copyAction =  new  JMenuItem("Copy");
        //JMenuItem pasteAction =  new JMenuItem("Paste");
        //JMenuItem saveTabAction= new JMenuItem("Salva tabella");
        //JMenuItem disconnectAction =   new JMenuItem("Disconnect");
        //JMenuItem exitAction =  new JMenuItem("Exit");
        //salvaMenu.add(disconnectAction);
        //fileMenu.add(openAction);
        //fileMenu.addSeparator();
        //fileMenu.add(exitAction);
        //editMenu.add(cutAction);
        //editMenu.add(copyAction);
        //editMenu.add(pasteAction);
        //editMenu.addSeparator();
        //viewMenu.add(saveTabAction);
        indietroMenu.addActionListener(this);
        
        esciMenu.addActionListener(this);
        guidaMenu.addActionListener(this);
        creditMenu.addActionListener(this);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void actionPerformed(ActionEvent ev)
  {
    System.out.println("Selected: " + ev.getActionCommand());
    Object src = ev.getActionCommand();
    //String s = String.valueOf(src);
    //System.out.println(s);
    if (src == "Guida"){
        try{
                  String command = "cmd /c start C:\\SOAP\\ProgettoCRC\\guida.txt";
                  Process p = Runtime.getRuntime().exec(command);
            }catch(Exception e){
                e.printStackTrace();
            }
    }
    else if(src == "Indietro"){
        
                
                new NewUser().setVisible(true);
                this.dispose();
    }
    else if(src == "Esci da ReCronix"){
        System.out.println("mao maooo");
        JOptionPane option = new JOptionPane("Sei convinto di voler uscire?", JOptionPane.QUESTION_MESSAGE, JOptionPane.YES_NO_OPTION);
        option.setBackground(Color.DARK_GRAY);
        JDialog dialog = option.createDialog("uscita da ReCronix");
        dialog.pack();
        dialog.setVisible(true);
        int n = ((Integer)option.getValue()).intValue();
        if (n == 0) {
            System.exit(0);
        }
    }
    
  }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        User = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jConferma = new javax.swing.JButton();
        jExit = new javax.swing.JButton();
        jBack = new javax.swing.JButton();
        Pass = new javax.swing.JPasswordField();
        Pass2 = new javax.swing.JPasswordField();
        jCode = new javax.swing.JLabel();
        jNome = new javax.swing.JLabel();
        jCognome = new javax.swing.JLabel();
        jData = new javax.swing.JLabel();
        jIndirizzo = new javax.swing.JLabel();
        jMail = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLuogo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        User.setBackground(new java.awt.Color(255, 255, 153));
        User.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        User.setForeground(new java.awt.Color(0, 0, 153));
        User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("username");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("password");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("reimmetti password");

        jConferma.setBackground(new java.awt.Color(102, 102, 102));
        jConferma.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jConferma.setForeground(new java.awt.Color(255, 204, 0));
        jConferma.setText("conferma");
        jConferma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConfermaActionPerformed(evt);
            }
        });

        jExit.setBackground(new java.awt.Color(102, 102, 102));
        jExit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 10)); // NOI18N
        jExit.setForeground(new java.awt.Color(255, 255, 0));
        jExit.setText("esci");
        jExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitActionPerformed(evt);
            }
        });

        jBack.setBackground(new java.awt.Color(102, 102, 102));
        jBack.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBack.setForeground(new java.awt.Color(255, 255, 0));
        jBack.setText("<< iindietro");
        jBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackActionPerformed(evt);
            }
        });

        Pass.setBackground(new java.awt.Color(255, 255, 153));
        Pass.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Pass.setForeground(new java.awt.Color(0, 0, 153));
        Pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PassActionPerformed(evt);
            }
        });

        Pass2.setBackground(new java.awt.Color(255, 255, 153));
        Pass2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Pass2.setForeground(new java.awt.Color(0, 0, 153));
        Pass2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pass2ActionPerformed(evt);
            }
        });

        jCode.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jCode.setForeground(new java.awt.Color(255, 204, 0));
        jCode.setText("jLabel5");

        jNome.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jNome.setForeground(new java.awt.Color(255, 204, 0));
        jNome.setText("jLabel5");

        jCognome.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jCognome.setForeground(new java.awt.Color(255, 204, 0));
        jCognome.setText("jLabel5");

        jData.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jData.setForeground(new java.awt.Color(255, 204, 0));
        jData.setText("jLabel5");

        jIndirizzo.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jIndirizzo.setForeground(new java.awt.Color(255, 204, 0));
        jIndirizzo.setText("jLabel5");

        jMail.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jMail.setForeground(new java.awt.Color(255, 204, 0));
        jMail.setText("jLabel5");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("nato/a  a ");

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("il");

        jLuogo.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLuogo.setForeground(new java.awt.Color(255, 204, 0));
        jLuogo.setText("jLabel7");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("residente in ");

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("casella di posta elettronica");

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Inserisci username e password");

        jMenuBar1.setBackground(new java.awt.Color(102, 102, 102));
        jMenuBar1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jMenu1.setBackground(new java.awt.Color(102, 102, 102));
        jMenu1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jMenu1.setForeground(new java.awt.Color(255, 153, 0));
        jMenu1.setText("File");
        jMenu1.setPreferredSize(new java.awt.Dimension(60, 20));
        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(102, 102, 102));
        jMenu2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jMenu2.setForeground(new java.awt.Color(255, 153, 0));
        jMenu2.setText("Edit");
        jMenu2.setPreferredSize(new java.awt.Dimension(60, 20));
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCode)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(106, 106, 106)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jMail)
                                            .addComponent(jIndirizzo)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLuogo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jData))))
                                    .addComponent(jLabel8))
                                .addGap(0, 114, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jExit)
                                    .addComponent(jConferma)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Pass2)
                                    .addComponent(Pass)
                                    .addComponent(User))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNome)
                    .addComponent(jCognome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLuogo)
                    .addComponent(jLabel6)
                    .addComponent(jData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jIndirizzo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jConferma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBack)
                    .addComponent(jExit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserActionPerformed

    private void jExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jExitActionPerformed

    private void Pass2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pass2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Pass2ActionPerformed

    private void jConfermaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConfermaActionPerformed
        String codice = jCode.getText();
        String nome = jNome.getText();
        String cognome = jCognome.getText();
        String data = jData.getText();
        String indirizzo = jIndirizzo.getText();
        String mail = jMail.getText();
        String username = User.getText();
        String password = String.valueOf(Pass.getPassword());
        String pass2 = String.valueOf(Pass2.getPassword());
        
        if (!username.isEmpty()&&!password.isEmpty()&&!pass2.isEmpty()){
            if((password.equals(pass2))){
                if(!(password.length() < 7)){
                    try{
                        URL address = new URL("http://localhost:8080/soap/servlet/rpcrouter");
                        Call chiamata=new Call();
                        chiamata.setTargetObjectURI("urn:crc");// l'ID della nostra RCP creata ad HOC
                        chiamata.setMethodName("VerificaUsername"); // chiamata del nostro metodo
                        chiamata.setEncodingStyleURI(Constants.NS_URI_SOAP_ENC); // codifica dei dati trasmessi
                        /* Imposto i parametri che devo inviare alla mia funzione tramite la chiamata RPC */
                        Vector parametri = new Vector();
                        parametri.addElement(new Parameter("username", String.class, username, null));
                        
                        chiamata.setParams(parametri); // impostiamo i parametri creati nella chiamata
                        System.out.println("SOAP call parameters:"+chiamata);
                        /* Tentiamo l'invocazione della RPC */
                        try {
                            Response risposta = chiamata.invoke(address, "");
                            Parameter par = risposta.getReturnValue(); // leggo la risposta
                            Object value=par.getValue();
                            String msg=String.valueOf(value);
                            System.out.println(msg);
                            if (!(msg.equals("A")|| msg.equals("U"))){
                                System.out.println("connesso");
                                try{
                                    Call chiama=new Call();
                                    chiama.setTargetObjectURI("urn:crc");// l'ID della nostra RCP creata ad HOC
                                    chiama.setMethodName("salvaUser"); // chiamata del nostro metodo
                                    chiama.setEncodingStyleURI(Constants.NS_URI_SOAP_ENC); // codifica dei dati trasmessi
                                    /* Imposto i parametri che devo inviare alla mia funzione tramite la chiamata RPC */
                                    Vector param = new Vector();
                                    param.addElement(new Parameter("codice", String.class, codice, null));
                                    param.addElement(new Parameter("nome", String.class, nome, null));
                                    param.addElement(new Parameter("cognome", String.class, cognome, null));
                                    param.addElement(new Parameter("nascita", String.class, data, null));
                                    param.addElement(new Parameter("indirizzo", String.class, indirizzo, null));
                                    param.addElement(new Parameter("mail", String.class, mail, null));
                                    param.addElement(new Parameter("username", String.class, username, null));
                                    param.addElement(new Parameter("passw", String.class, password, null));
                                    chiama.setParams(param); // impostiamo i parametri creati nella chiamata
                                    System.out.println("SOAP call parameters:"+chiama);
                                    /* Tentiamo l'invocazione della RPC */
                                    try {
                                        Response risp = chiama.invoke(address, "");
                                        Parameter para = risp.getReturnValue(); // leggo la risposta
                                        String msg1 = (String) para.getValue();
                                        if (msg1.equals("si")){
                                            JOptionPane.showMessageDialog(this, "inserimento Completato con successo", "succeded", JOptionPane.INFORMATION_MESSAGE);
                                            Login m = new Login();
                                            m.setVisible(true);
                                            this.dispose();
                                        }
                                        else{
                                            JOptionPane.showMessageDialog(this, "Attenzione nuovo utente non inserito", "errore", JOptionPane.ERROR_MESSAGE);
                                        }

                                    }
                                    catch(SOAPException e){
                                        JOptionPane.showMessageDialog(this, "attenzione si è verificato un errore", "errore", JOptionPane.ERROR_MESSAGE);
                                        System.out.println("errore causato:("+e.getFaultCode()+"):"+e.getMessage());
                                    }
                            }
                            catch(Exception ex){
                                JOptionPane.showMessageDialog(this, "attenzione b", "errore", JOptionPane.ERROR_MESSAGE);
                                System.out.println(ex.getMessage());
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "attenzione username già in uso", "errore", JOptionPane.ERROR_MESSAGE);
                        }
                        }
            catch(SOAPException e){
                   JOptionPane.showMessageDialog(this, "attenzione si è verificato un errore", "errore", JOptionPane.ERROR_MESSAGE);
                   System.out.println("errore causato:("+e.getFaultCode()+"):"+e.getMessage());
               }
        }
        catch(MalformedURLException ex){
            JOptionPane.showMessageDialog(this, "attenzione nome utente già utilizzato", "errore", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex.getMessage());
        }
     }
     else{
            JOptionPane.showMessageDialog(this, "attenzione la password deve contenere almeno 7 caratteri alfanumerici", "ERRORE", JOptionPane.ERROR_MESSAGE);
            User.setText("inserire username");
            Pass.setText("inserire password");
            Pass2.setText("reinserire password");
            System.out.println("registrazione nuovo utente non avvenuta");
            JOptionPane.showMessageDialog(this, "registrazione nuovo utente non avvenuta", "ERRORE", JOptionPane.ERROR_MESSAGE);
        }
     }
     else{
            JOptionPane.showMessageDialog(this, "attenzione le due password inserite non corrispondono", "ERRORE", JOptionPane.ERROR_MESSAGE);
            User.setText("inserire username");
            Pass.setText("inserire password");
            Pass2.setText("reinserire password");
            System.out.println("registrazione nuovo utente non avvenuta1");
            JOptionPane.showMessageDialog(this, "registrazione nuovo utente non avvenuta", "ERRORE", JOptionPane.ERROR_MESSAGE);
        }
     }
     else{
           JOptionPane.showMessageDialog(this, "attenzione i campi con (*) sono obbligatori da compilare", "ERRORE", JOptionPane.ERROR_MESSAGE);
           User.setText("inserire username");
           Pass.setText("inserire password");
           Pass2.setText("reinserire password");
           System.out.println("registrazione nuovo utente non avvenuta2");
           JOptionPane.showMessageDialog(this, "registrazione nuovo utente non avvenuta", "ERRORE", JOptionPane.ERROR_MESSAGE);
     }
    }//GEN-LAST:event_jConfermaActionPerformed

        private void PassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PassActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_PassActionPerformed

        private void jBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackActionPerformed
            new NewUser().setVisible(true);
            this.dispose();
        }//GEN-LAST:event_jBackActionPerformed
    
    /**
    * @param args the command line arguments
    */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Pass;
    private javax.swing.JPasswordField Pass2;
    private javax.swing.JTextField User;
    private javax.swing.JButton jBack;
    private javax.swing.JLabel jCode;
    private javax.swing.JLabel jCognome;
    private javax.swing.JButton jConferma;
    private javax.swing.JLabel jData;
    private javax.swing.JButton jExit;
    private javax.swing.JLabel jIndirizzo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLuogo;
    private javax.swing.JLabel jMail;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel jNome;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

}
